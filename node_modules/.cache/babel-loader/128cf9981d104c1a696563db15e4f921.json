{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDy1g1y8-xmo9kdTqzw7XIK7zok1XXIsV0\",\n  authDomain: \"crown-db-4a890.firebaseapp.com\",\n  projectId: \"crown-db-4a890\",\n  storageBucket: \"crown-db-4a890.appspot.com\",\n  messagingSenderId: \"693645511656\",\n  appId: \"1:693645511656:web:a47028e4fa1e0fa9a0725d\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log(\"Done\");\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionlInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot); // if user data does not exist\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionlInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  } // if user data exists\n\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","createUserDocumentFromAuth","userAuth","additionlInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/Users/evanhyett/Documents/GitHub/e_commerce_site/ecomm_site/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, } from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDy1g1y8-xmo9kdTqzw7XIK7zok1XXIsV0\",\n    authDomain: \"crown-db-4a890.firebaseapp.com\",\n    projectId: \"crown-db-4a890\",\n    storageBucket: \"crown-db-4a890.appspot.com\",\n    messagingSenderId: \"693645511656\",\n    appId: \"1:693645511656:web:a47028e4fa1e0fa9a0725d\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst provider = new GoogleAuthProvider();\n\nprovider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\n\nexport const db = getFirestore();\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = collection(db, collectionKey);\n    const batch = writeBatch(db);\n\n    objectsToAdd.forEach((object) => {\n        const docRef = doc(collectionRef, object.title.toLowerCase());\n        batch.set(docRef, object);\n    });\n\n    await batch.commit();\n    console.log(\"Done\");\n}\n\nexport const createUserDocumentFromAuth = async (userAuth, additionlInformation = {}) => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n\n    console.log(userDocRef);\n\n    const userSnapshot = await getDoc(userDocRef);\n    console.log(userSnapshot);\n\n    // if user data does not exist\n    if(!userSnapshot.exists()) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName, email, createdAt, ...additionlInformation\n            });\n        } catch (error) {\n            console.log('error creating the user', error.message);\n        }\n    }\n\n    // if user data exists\n    return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n    if(!email || !password) return;\n\n    return await createUserWithEmailAndPassword(auth, email, password)\n}\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n    if(!email || !password) return;\n\n    return await signInWithEmailAndPassword(auth, email, password);\n}\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth, callback);"],"mappings":"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"},"metadata":{},"sourceType":"module"}